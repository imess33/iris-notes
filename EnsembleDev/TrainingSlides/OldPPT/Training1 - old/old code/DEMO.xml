<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2017.2.1 (Build 801U)" ts="2017-12-31 15:10:14">
<Class name="CDR.BP.AddPatientBusinessProcess.Context">
<Description>
This class is generated by the CDR.BP.AddPatientBusinessProcess BPL class.
This class should not be edited or modified in any way.
Do not make direct use of this class in your application.</Description>
<ClassType>persistent</ClassType>
<CompileAfter>CDR.BP.AddPatientBusinessProcess</CompileAfter>
<IncludeCode/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.BP.Context</Super>
<TimeChanged>64647,68448.645479</TimeChanged>
<TimeCreated>64647,68447.870079</TimeCreated>
<GeneratedBy>Ens.BPL.Compiler.CLS</GeneratedBy>

<Property name="ExistingCount">
<Type>%Integer</Type>
<InitialExpression>0</InitialExpression>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>ContextDefaultData1</DefaultData>
<Data name="ContextDefaultData1">
<Structure>listnode</Structure>
<Subscript>"Context"</Subscript>
<Value name="1">
<Value>ExistingCount</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="CDR.BP.AddPatientBusinessProcess.Thread1">
<Description>
This class is generated by the CDR.BP.AddPatientBusinessProcess BPL class.
This class should not be edited or modified in any way.
Do not make direct use of this class in your application.</Description>
<ClassType>persistent</ClassType>
<CompileAfter>CDR.BP.AddPatientBusinessProcess</CompileAfter>
<IncludeCode/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.BP.Thread</Super>
<TimeChanged>64647,68448.74808</TimeChanged>
<TimeCreated>64647,68447.871305</TimeCreated>
<GeneratedBy>Ens.BPL.Compiler.CLS</GeneratedBy>

<Method name="S1">
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,synctimedout:%Boolean,syncresponses:%ArrayOfObjects(ELEMENTTYPE="%Library.Persistent"),request:%Library.Persistent,response:%Library.Persistent</FormalSpec>
<Language>cache</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 Set status=$$$OK,context.PatientNumber=request.PatientNumber
 If $$$ISERR(status) Quit
 &SQL(
select count(*) INTO :context.ExistingCount from CDR.Patient where PatientNumber = :request.PatientNumber
 )
 If (context.ExistingCount) {
 Set ..%NextState="S3"
 } else {
 Set ..%NextState="S4"
 }
 } while (0)
Exit Quit ..ManageState(status)
Trap Set $ZT="",status=..ManageStatus(status,"S1") Goto Exit
]]></Implementation>
</Method>

<Method name="S2">
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,synctimedout:%Boolean,syncresponses:%ArrayOfObjects(ELEMENTTYPE="%Library.Persistent"),request:%Library.Persistent,response:%Library.Persistent</FormalSpec>
<Language>cache</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 Do process.ClearAllPendingResponses()
 Set ..%NextState="Stop"
 } while (0)
Exit Quit ..ManageState(status)
Trap Set $ZT="",status=..ManageStatus(status,"S2") Goto Exit
]]></Implementation>
</Method>

<Method name="S3">
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,synctimedout:%Boolean,syncresponses:%ArrayOfObjects(ELEMENTTYPE="%Library.Persistent"),request:%Library.Persistent,response:%Library.Persistent</FormalSpec>
<Language>cache</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 Set status=$$$OK,response=##class(CDR.BP.MSG.AddPatientResp).getPatientExistMsg(request.PatientNumber)
 If $$$ISERR(status) Quit
 Set ..%NextState="S2"
 } while (0)
Exit Quit ..ManageState(status)
Trap Set $ZT="",status=..ManageStatus(status,"S3") Goto Exit
]]></Implementation>
</Method>

<Method name="S4">
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,synctimedout:%Boolean,syncresponses:%ArrayOfObjects(ELEMENTTYPE="%Library.Persistent"),request:%Library.Persistent,response:%Library.Persistent</FormalSpec>
<Language>cache</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 Set status=$$$OK,response=##class(CDR.BP.MSG.AddPatientResp).getPatientExistMsg(request.PatientNumber)
 If $$$ISERR(status) Quit
 Set ..%NextState="S2"
 } while (0)
Exit Quit ..ManageState(status)
Trap Set $ZT="",status=..ManageStatus(status,"S4") Goto Exit
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>


<Class name="CDR.BP.AddPatientBusinessProcess">
<Description>
</Description>
<Super>Ens.BusinessProcessBPL</Super>
<TimeChanged>64647,68447.791499</TimeChanged>
<TimeCreated>64647,66376.579232</TimeCreated>

<XData name="BPL">
<Description>
BPL Definition</Description>
<XMLNamespace>http://www.intersystems.com/bpl</XMLNamespace>
<Data><![CDATA[
<process language='objectscript' request='CDR.BP.MSG.AddPatientRequest' response='CDR.BP.MSG.AddPatientResp' height='2000' width='2000' >
<context>
<property name='ExistingCount' type='%Integer' initialexpression='0' instantiate='0' />
</context>
<sequence xend='200' yend='800' >
<assign property="context.PatientNumber" value="request.PatientNumber" action="set" xpos='200' ypos='250' />
<sql xpos='200' ypos='350' >
<![CDATA[select count(*) INTO :context.ExistingCount from CDR.Patient where PatientNumber = :request.PatientNumber]]]]><![CDATA[>
</sql>
<if condition='context.ExistingCount' xpos='200' ypos='450' xend='200' yend='700' >
<true>
<assign property="response" value="##class(CDR.BP.MSG.AddPatientResp).getPatientExistMsg(request.PatientNumber)" action="set" xpos='470' ypos='600' />
</true>
<false>
<assign property="response" value="##class(CDR.BP.MSG.AddPatientResp).getPatientExistMsg(request.PatientNumber)" action="set" xpos='200' ypos='600' />
</false>
</if>
</sequence>
</process>
]]></Data>
</XData>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>


<Class name="CDR.BP.AddPatientProcess">
<ClassType>persistent</ClassType>
<Super>Ens.BusinessProcess</Super>
<TimeChanged>64647,75268.230804</TimeChanged>
<TimeCreated>64647,69180.902928</TimeCreated>

<Method name="OnRequest">
<FormalSpec>pRequest:CDR.BP.MSG.AddPatientRequest,*pResponse:CDR.BP.MSG.AddPatientResp</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//If Patient Exist, ignore the request and return with a fault code
	if (##class(CDR.Utils.PatientUtility).IsPatientNumberExist(pRequest.PatientNumber)){
		set pResponse = ##class(CDR.Utils.PatientUtility).getPatientExistMsg(pRequest.PatientNumber)
		quit $$$OK
	}
	//Otherwise first save the patient to local CDR
	set tSC = ##class(CDR.Utils.PatientUtility).SavePatientFromMsg(pRequest)
	if $$$ISERR(tSC){ 
		set pResponse = ##class(CDR.Utils.PatientUtility).getSaveErrorMsg(tSC)
		quit tSC
	}
	
	//Then call DT to transform the request and save the patient to EMR
	#dim emrReq As Demo.EMRClient.MSG.Request.AddPatientRequest
	set tSC = ##class(CDR.DT.CDRToEMRDT).Transform(pRequest, .emrReq)
	if $$$ISERR(tSC){
		set pResponse = ##class(CDR.Utils.PatientUtility).getDTErrorMsg("Demo.EMRClient.MSG.Request.AddPatientRequest")
		quit tSC
	}
	
	//Then call DT to transform the request and save the patient to LIS
	#dim lisReq As Demo.LISClient.MSG.AddPatientReq
	set sc = ##class(CDR.DT.CDRToLISDT).Transform(pRequest, .lisReq)
	if $$$ISERR(tSC){
		set pResponse = ##class(CDR.Utils.PatientUtility).getDTErrorMsg("Demo.LISClient.MSG.AddPatientReq")
		quit tSC
	}
	
	//Save patient to EMR
	set tSC=..SendRequestAsync("Demo.EMRClient.Operation.PatientServiceSoap",emrReq)
	if $$$ISERR(tSC){
		set pResponse = ##class(CDR.Utils.PatientUtility).getBOErrorMsg("EMR")
		quit tSC
	}
	//Save Patient to LIS
	set tSC=..SendRequestAsync("Demo.LISClient.Operation.PatientOperation",lisReq)
	if $$$ISERR(tSC){
		set pResponse = ##class(CDR.Utils.PatientUtility).getBOErrorMsg("LIS")
		quit tSC
	}
	
	set pResponse = ##class(CDR.Utils.PatientUtility).getSuccessMsg()
	
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="OnResponse">
<FormalSpec>pResponse:Ens.Response</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	quit $$$OK
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>


<Class name="CDR.BP.MSG.AddPatientRequest">
<Super>Ens.Request</Super>
<TimeChanged>64647,66246.952629</TimeChanged>
<TimeCreated>64647,66181.004721</TimeCreated>

<Property name="IDNumber">
<Type>%String</Type>
</Property>

<Property name="PatientNumber">
<Type>%String</Type>
</Property>

<Property name="FirstName">
<Type>%String</Type>
</Property>

<Property name="LastName">
<Type>%String</Type>
</Property>

<Property name="Gender">
<Type>%String</Type>
<Parameter name="VALUELIST" value=",M,F"/>
</Property>

<Property name="DOB">
<Type>%Date</Type>
</Property>

<Property name="Citizenship">
<Type>%String</Type>
</Property>

<Property name="PhoneNumber">
<Type>%String</Type>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>AddPatientRequestDefaultData</DefaultData>
<Data name="AddPatientRequestDefaultData">
<Structure>listnode</Structure>
<Subscript>"AddPatientRequest"</Subscript>
<Value name="1">
<Value>IDNumber</Value>
</Value>
<Value name="2">
<Value>PatientNumber</Value>
</Value>
<Value name="3">
<Value>FirstName</Value>
</Value>
<Value name="4">
<Value>LastName</Value>
</Value>
<Value name="5">
<Value>Gender</Value>
</Value>
<Value name="6">
<Value>DOB</Value>
</Value>
<Value name="7">
<Value>Citizenship</Value>
</Value>
<Value name="8">
<Value>PhoneNumber</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="CDR.BP.MSG.AddPatientResp">
<Super>Ens.Response</Super>
<TimeChanged>64648,52641.702383</TimeChanged>
<TimeCreated>64647,66277.41585</TimeCreated>

<Property name="RtnCode">
<Type>%Integer</Type>
</Property>

<Property name="RtnMsg">
<Type>%String</Type>
<Parameter name="MAXLEN" value="256"/>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>AddPatientRespDefaultData</DefaultData>
<Data name="AddPatientRespDefaultData">
<Subscript>"AddPatientResp"</Subscript>
<Value name="1">
<Value>RtnCode</Value>
</Value>
<Value name="2">
<Value>RtnMsg</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="CDR.BS.PatientSyncService">
<Description>
CDR.BS.PatientSyncService</Description>
<Super>EnsLib.SOAP.Service</Super>
<TimeChanged>64648,51816.653765</TimeChanged>
<TimeCreated>64648,50162.219725</TimeCreated>

<Parameter name="ADAPTER">
</Parameter>

<Parameter name="SERVICENAME">
<Description>
WebService 的名称.</Description>
<Default>PatientSyncService</Default>
</Parameter>

<Parameter name="NAMESPACE">
<Description>
WebService 的 SOAP Namespace</Description>
<Default>http://tempuri.org</Default>
</Parameter>

<Parameter name="USECLASSNAMESPACES">
<Description>
引用类的 命名空间 将在 WSDL 中使用.</Description>
<Default>1</Default>
</Parameter>

<Method name="SyncPatient">
<Description>
SyncPatient</Description>
<FormalSpec>tRequest:CDR.BP.MSG.AddPatientRequest</FormalSpec>
<ReturnType>CDR.BP.MSG.AddPatientResp</ReturnType>
<WebMethod>1</WebMethod>
<Implementation><![CDATA[
	set tResponse = ""
	set tSc = ..SendRequestSync("CDR.BP.AddPatientProcess",tRequest,.tResponse)
	Quit tResponse
]]></Implementation>
</Method>
</Class>


<Class name="CDR.DT.CDRToEMRDT">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>64647,71783.564113</TimeChanged>
<TimeCreated>64647,71683.600544</TimeCreated>
<DependsOn>CDR.BP.MSG.AddPatientRequest,Demo.EMRClient.MSG.Request.AddPatientRequest</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='CDR.BP.MSG.AddPatientRequest' targetClass='Demo.EMRClient.MSG.Request.AddPatientRequest' create='new' language='objectscript' >
<assign value='source.IDNumber' property='target.pat.IDCard' action='set' />
<assign value='source.PatientNumber' property='target.pat.PatNo' action='set' />
<assign value='source.DOB' property='target.pat.DOB' action='set' />
<assign value='source.Citizenship' property='target.pat.Citizenship' action='set' />
<assign value='source.PhoneNumber' property='target.pat.PhoneNumber' action='set' />
<if condition='"M" = source.Gender' >
<true>
<assign value='"Male"' property='target.pat.Gender' action='set' />
</true>
<false>
<if condition='"F" = source.Gender' >
<true>
<assign value='"Female"' property='target.pat.Gender' action='set' />
</true>
</if>
</false>
</if>
<assign value='source.LastName _ source.FirstName' property='target.pat.Name' action='set' />
</transform>
]]></Data>
</XData>
</Class>


<Class name="CDR.DT.CDRToLISDT">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>64647,72482.198792</TimeChanged>
<TimeCreated>64647,72479.456363</TimeCreated>
<DependsOn>CDR.BP.MSG.AddPatientRequest,Demo.LISClient.MSG.AddPatientReq</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='CDR.BP.MSG.AddPatientRequest' targetClass='Demo.LISClient.MSG.AddPatientReq' create='new' language='objectscript' >
<assign value='source.PatientNumber' property='target.PatientNumber' action='set' />
<assign value='source.Gender' property='target.Gender' action='set' />
<assign value='source.LastName _ source.FirstName' property='target.FullName' action='set' />
</transform>
]]></Data>
</XData>
</Class>




<Class name="CDR.Patient">
<Super>%Persistent,%XML.Adaptor</Super>
<TimeChanged>64647,71143.0664</TimeChanged>
<TimeCreated>64644,55030.005495</TimeCreated>

<Property name="IDNumber">
<Type>%String</Type>
</Property>

<Property name="PatientNumber">
<Type>%String</Type>
</Property>

<Property name="FirstName">
<Type>%String</Type>
</Property>

<Property name="LastName">
<Type>%String</Type>
</Property>

<Property name="Gender">
<Type>%String</Type>
<Parameter name="VALUELIST" value=",M,F"/>
</Property>

<Property name="DOB">
<Type>%Date</Type>
</Property>

<Property name="Citizenship">
<Type>%String</Type>
</Property>

<Property name="PhoneNumber">
<Type>%String</Type>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^CDR.PatientD</DataLocation>
<DefaultData>PatientDefaultData</DefaultData>
<IdLocation>^CDR.PatientD</IdLocation>
<IndexLocation>^CDR.PatientI</IndexLocation>
<StreamLocation>^CDR.PatientS</StreamLocation>
<Data name="PatientDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>IDNumber</Value>
</Value>
<Value name="3">
<Value>PatientNumber</Value>
</Value>
<Value name="4">
<Value>FirstName</Value>
</Value>
<Value name="5">
<Value>LastName</Value>
</Value>
<Value name="6">
<Value>Gender</Value>
</Value>
<Value name="7">
<Value>DOB</Value>
</Value>
<Value name="8">
<Value>Citizenship</Value>
</Value>
<Value name="9">
<Value>PhoneNumber</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="CDR.Utils.PatientUtility">
<Super>%RegisteredObject</Super>
<TimeChanged>64647,75315.97884</TimeChanged>
<TimeCreated>64647,68825.048304</TimeCreated>

<Method name="IsPatientNumberExist">
<ClassMethod>1</ClassMethod>
<FormalSpec>patNumber:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	if "" '= patNumber {
		set count = 0
		&sql(select count(*) into :count from CDR.Patient p
		where p.PatientNumber = :patNumber)
		if (0 < count){
			quit 1
		}
	}
	quit 0
]]></Implementation>
</Method>

<Method name="SavePatientFromMsg">
<ClassMethod>1</ClassMethod>
<FormalSpec>req:CDR.BP.MSG.AddPatientRequest</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#dim patInst As CDR.Patient = ##class(CDR.Patient).%New()
	set patInst.PatientNumber = req.PatientNumber
	set patInst.FirstName = req.FirstName
	set patInst.LastName = req.LastName
	set patInst.IDNumber = req.IDNumber
	set patInst.Gender = req.Gender
	set patInst.DOB = req.DOB
	set patInst.PhoneNumber = req.PhoneNumber
	set tSC = patInst.%Save()
	quit tSC
]]></Implementation>
</Method>

<Method name="getPatientExistMsg">
<ClassMethod>1</ClassMethod>
<FormalSpec>patNumber:%String</FormalSpec>
<ReturnType>CDR.BP.MSG.AddPatientResp</ReturnType>
<Implementation><![CDATA[
	#dim msg As CDR.BP.MSG.AddPatientResp = ##class(CDR.BP.MSG.AddPatientResp).%New()
	set msg.RtnCode = 100
	set msg.RtnMsg = "Patient with number: "_patNumber_" exists, creation ignored"
	quit msg
]]></Implementation>
</Method>

<Method name="getSaveErrorMsg">
<ClassMethod>1</ClassMethod>
<FormalSpec>tsc:%Status</FormalSpec>
<ReturnType>CDR.BP.MSG.AddPatientResp</ReturnType>
<Implementation><![CDATA[
	#dim msg As CDR.BP.MSG.AddPatientResp = ##class(CDR.BP.MSG.AddPatientResp).%New()
	set msg.RtnCode = 200
	set msg.RtnMsg = "Failed in saving patient, reason: "_$System.Status.GetErrorText(tsc)
	quit msg
]]></Implementation>
</Method>

<Method name="getDTErrorMsg">
<ClassMethod>1</ClassMethod>
<FormalSpec>msgName:%String</FormalSpec>
<ReturnType>CDR.BP.MSG.AddPatientResp</ReturnType>
<Implementation><![CDATA[
	set pResponse = ##class(CDR.BP.MSG.AddPatientResp).%New()
	set pResponse.RtnCode = 300
	set pResponse.RtnMsg = "Failed in transfroming request to "_msgName
	quit pResponse
]]></Implementation>
</Method>

<Method name="getBOErrorMsg">
<ClassMethod>1</ClassMethod>
<FormalSpec>targetName:%String</FormalSpec>
<ReturnType>CDR.BP.MSG.AddPatientResp</ReturnType>
<Implementation><![CDATA[
	set pResponse = ##class(CDR.BP.MSG.AddPatientResp).%New()
	set pResponse.RtnCode = 400
	set pResponse.RtnMsg = "Failed in sending request to "_targetName
	quit pResponse
]]></Implementation>
</Method>

<Method name="getSuccessMsg">
<ClassMethod>1</ClassMethod>
<ReturnType>CDR.BP.MSG.AddPatientResp</ReturnType>
<Implementation><![CDATA[
	set pResponse = ##class(CDR.BP.MSG.AddPatientResp).%New()
	set pResponse.RtnCode = 0
	set pResponse.RtnMsg = "Patient Sync completed"
	quit pResponse
]]></Implementation>
</Method>
</Class>


<Project name="DEMO" LastModified="2017-12-31 15:10:01.748355">
  <Items>
    <ProjectItem name="CDR" type="PKG"></ProjectItem>
    <ProjectItem name="Demo" type="PKG"></ProjectItem>
  </Items>
</Project>


<Class name="Demo.DemoIntegrationProd">
<Super>Ens.Production</Super>
<TimeChanged>64648,50568.497901</TimeChanged>
<TimeCreated>64645,60863.572023</TimeCreated>

<XData name="ProductionDefinition">
<Data><![CDATA[
<Production Name="Demo.DemoIntegrationProd" TestingEnabled="true" LogGeneralTraceEvents="false">
  <Description></Description>
  <ActorPoolSize>2</ActorPoolSize>
  <Item Name="Demo.EMRClient.Operation.PatientServiceSoap" Category="" ClassName="Demo.EMRClient.Operation.PatientServiceSoap" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="SOAPCredentials">EMR</Setting>
  </Item>
  <Item Name="Demo.LISClient.Operation.PatientOperation" Category="" ClassName="Demo.LISClient.Operation.PatientOperation" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="Credentials">EMR</Setting>
    <Setting Target="Adapter" Name="HTTPPort">57773</Setting>
    <Setting Target="Adapter" Name="HTTPServer">localhost</Setting>
    <Setting Target="Adapter" Name="URL">/csp/DemoLIS/api/Patient</Setting>
  </Item>
  <Item Name="CDR.BP.AddPatientProcess" Category="" ClassName="CDR.BP.AddPatientProcess" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
  </Item>
  <Item Name="CDR.BS.PatientSyncService" Category="" ClassName="CDR.BS.PatientSyncService" PoolSize="0" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
  </Item>
</Production>
]]></Data>
</XData>
</Class>


<Class name="Demo.EMRClient.MSG.Request.AddPatientRequest">
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.Request</Super>
<TimeChanged>64647,61420.510433</TimeChanged>
<TimeCreated>64647,61419.995368</TimeCreated>

<Parameter name="RESPONSECLASSNAME">
<Default>Demo.EMRClient.MSG.Response.AddPatientResponse</Default>
</Parameter>

<Property name="pat">
<Type>Demo.EMRClient.Proxy.s0.PatientReq</Type>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>AddPatientRequestDefaultData</DefaultData>
<Data name="AddPatientRequestDefaultData">
<Structure>listnode</Structure>
<Subscript>"AddPatientRequest"</Subscript>
<Value name="1">
<Value>pat</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="Demo.EMRClient.MSG.Request.QueryPatientRequest">
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.Request</Super>
<TimeChanged>64647,61420.507691</TimeChanged>
<TimeCreated>64647,61419.996393</TimeCreated>

<Parameter name="RESPONSECLASSNAME">
<Default>Demo.EMRClient.MSG.Response.QueryPatientResponse</Default>
</Parameter>

<Property name="pid">
<Type>%String</Type>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>QueryPatientRequestDefaultData</DefaultData>
<Data name="QueryPatientRequestDefaultData">
<Structure>listnode</Structure>
<Subscript>"QueryPatientRequest"</Subscript>
<Value name="1">
<Value>pid</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="Demo.EMRClient.MSG.Response.AddPatientResponse">
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.Response</Super>
<TimeChanged>64647,61420.547696</TimeChanged>
<TimeCreated>64647,61419.99576</TimeCreated>

<Property name="AddPatientResult">
<Type>Demo.EMRClient.Proxy.s0.PatientResp</Type>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>AddPatientResponseDefaultData</DefaultData>
<Data name="AddPatientResponseDefaultData">
<Structure>listnode</Structure>
<Subscript>"AddPatientResponse"</Subscript>
<Value name="1">
<Value>AddPatientResult</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="Demo.EMRClient.MSG.Response.QueryPatientResponse">
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.Response</Super>
<TimeChanged>64647,61420.547261</TimeChanged>
<TimeCreated>64647,61419.996746</TimeCreated>

<Property name="QueryPatientResult">
<Type>Demo.EMRClient.Proxy.s0.PatientResp</Type>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>QueryPatientResponseDefaultData</DefaultData>
<Data name="QueryPatientResponseDefaultData">
<Structure>listnode</Structure>
<Subscript>"QueryPatientResponse"</Subscript>
<Value name="1">
<Value>QueryPatientResult</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="Demo.EMRClient.Operation.PatientServiceSoap">
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.BusinessOperation</Super>
<TimeChanged>64647,61420.001219</TimeChanged>
<TimeCreated>64647,61419.992361</TimeCreated>

<Method name="AddPatient">
<FormalSpec>pRequest:Demo.EMRClient.MSG.Request.AddPatientRequest,*pResponse:Demo.EMRClient.MSG.Response.AddPatientResponse</FormalSpec>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
 Set ..Adapter.WebServiceClientClass = "Demo.EMRClient.Proxy.PatientServiceSoap"
 Set tSC = ..Adapter.InvokeMethod("AddPatient",.AddPatientResult,pRequest.pat)  Quit:$$$ISERR(tSC) tSC
 Set tSC = pRequest.NewResponse(.pResponse)  Quit:$$$ISERR(tSC) tSC
 Set pResponse.AddPatientResult=$get(AddPatientResult)
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="QueryPatient">
<FormalSpec>pRequest:Demo.EMRClient.MSG.Request.QueryPatientRequest,*pResponse:Demo.EMRClient.MSG.Response.QueryPatientResponse</FormalSpec>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
 Set ..Adapter.WebServiceClientClass = "Demo.EMRClient.Proxy.PatientServiceSoap"
 Set tSC = ..Adapter.InvokeMethod("QueryPatient",.QueryPatientResult,pRequest.pid)  Quit:$$$ISERR(tSC) tSC
 Set tSC = pRequest.NewResponse(.pResponse)  Quit:$$$ISERR(tSC) tSC
 Set pResponse.QueryPatientResult=$get(QueryPatientResult)
 Quit $$$OK
]]></Implementation>
</Method>

<Parameter name="ADAPTER">
<Default>EnsLib.SOAP.OutboundAdapter</Default>
</Parameter>

<XData name="MessageMap">
<Data><![CDATA[
<MapItems>
	<MapItem MessageType="Demo.EMRClient.MSG.Request.AddPatientRequest">
		<Method>AddPatient</Method>
	</MapItem>
	<MapItem MessageType="Demo.EMRClient.MSG.Request.QueryPatientRequest">
		<Method>QueryPatient</Method>
	</MapItem>
</MapItems>
]]></Data>
</XData>
</Class>


<Class name="Demo.EMRClient.Proxy.PatientServiceSoap">
<ProcedureBlock>1</ProcedureBlock>
<Super>%SOAP.WebClient</Super>
<TimeChanged>64647,61419.997793</TimeChanged>
<TimeCreated>64647,61419.991946</TimeCreated>

<Method name="AddPatient">
<Final>1</Final>
<FormalSpec>pat:Demo.EMRClient.Proxy.s0.PatientReq</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<ReturnType>Demo.EMRClient.Proxy.s0.PatientResp</ReturnType>
<WebMethod>1</WebMethod>
<SoapBindingStyle>document</SoapBindingStyle>
<SoapBodyUse>literal</SoapBodyUse>
<Implementation><![CDATA[ Quit ..WebMethod("AddPatient").Invoke($this,"http://tempuri.org/EMR.WS.PatientService.AddPatient",.pat)
]]></Implementation>
</Method>

<Method name="QueryPatient">
<Final>1</Final>
<FormalSpec>pid:%String</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<ReturnType>Demo.EMRClient.Proxy.s0.PatientResp</ReturnType>
<WebMethod>1</WebMethod>
<SoapBindingStyle>document</SoapBindingStyle>
<SoapBodyUse>literal</SoapBodyUse>
<Implementation><![CDATA[ Quit ..WebMethod("QueryPatient").Invoke($this,"http://tempuri.org/EMR.WS.PatientService.QueryPatient",.pid)
]]></Implementation>
</Method>

<Parameter name="LOCATION">
<Description>
This is the URL used to access the web service.</Description>
<Default>http://192.168.113.131:57773/csp/demoemr/EMR.WS.PatientService.cls</Default>
</Parameter>

<Parameter name="NAMESPACE">
<Description>
This is the namespace used by the Service</Description>
<Default>http://tempuri.org</Default>
</Parameter>

<Parameter name="OUTPUTTYPEATTRIBUTE">
<Description>
Use xsi:type attribute for literal types.</Description>
<Default>1</Default>
</Parameter>

<Parameter name="SECURITYIN">
<Description>
Determines handling of Security header.</Description>
<Default>ALLOW</Default>
</Parameter>

<Parameter name="SERVICENAME">
<Description>
This is the name of the Service</Description>
<Default>PatientService</Default>
</Parameter>

<Parameter name="SOAPVERSION">
<Description>
This is the SOAP version supported by the service.</Description>
<Default>1.1</Default>
</Parameter>
</Class>


<Class name="Demo.EMRClient.Proxy.s0.PatientReq">
<Description>
创建自: http://192.168.113.131:57773/csp/demoemr/EMR.WS.PatientService.cls?WSDL=1</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%SerialObject,%XML.Adaptor</Super>
<TimeChanged>64647,61420.162615</TimeChanged>
<TimeCreated>64647,61420.00436</TimeCreated>

<Parameter name="ELEMENTQUALIFIED">
<Default>1</Default>
</Parameter>

<Parameter name="NAMESPACE">
<Default>http://tempuri.org</Default>
</Parameter>

<Parameter name="XMLNAME">
<Default>PatientReq</Default>
</Parameter>

<Parameter name="XMLSEQUENCE">
<Default>1</Default>
</Parameter>

<Property name="IDCard">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
<Parameter name="XMLNAME" value="IDCard"/>
</Property>

<Property name="PatNo">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
<Parameter name="XMLNAME" value="PatNo"/>
</Property>

<Property name="Name">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
<Parameter name="XMLNAME" value="Name"/>
</Property>

<Property name="Gender">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
<Parameter name="VALUELIST" value=",Male,Female"/>
<Parameter name="XMLNAME" value="Gender"/>
</Property>

<Property name="DOB">
<Type>%Date</Type>
<Parameter name="XMLNAME" value="DOB"/>
</Property>

<Property name="Citizenship">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
<Parameter name="XMLNAME" value="Citizenship"/>
</Property>

<Property name="PhoneNumber">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
<Parameter name="XMLNAME" value="PhoneNumber"/>
</Property>

<Storage name="Default">
<Type>%Library.CacheSerialState</Type>
<State>PatientReqState</State>
<StreamLocation>^Demo.EMRClient.PrE0.PatientReqS</StreamLocation>
<Data name="PatientReqState">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>IDCard</Value>
</Value>
<Value name="2">
<Value>PatNo</Value>
</Value>
<Value name="3">
<Value>Name</Value>
</Value>
<Value name="4">
<Value>Gender</Value>
</Value>
<Value name="5">
<Value>DOB</Value>
</Value>
<Value name="6">
<Value>Citizenship</Value>
</Value>
<Value name="7">
<Value>PhoneNumber</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="Demo.EMRClient.Proxy.s0.PatientResp">
<Description>
创建自: http://192.168.113.131:57773/csp/demoemr/EMR.WS.PatientService.cls?WSDL=1</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%SerialObject,%XML.Adaptor</Super>
<TimeChanged>64647,61420.135892</TimeChanged>
<TimeCreated>64647,61420.008031</TimeCreated>

<Parameter name="ELEMENTQUALIFIED">
<Default>1</Default>
</Parameter>

<Parameter name="NAMESPACE">
<Default>http://tempuri.org</Default>
</Parameter>

<Parameter name="XMLNAME">
<Default>PatientResp</Default>
</Parameter>

<Parameter name="XMLSEQUENCE">
<Default>1</Default>
</Parameter>

<Property name="Id">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
<Parameter name="XMLNAME" value="Id"/>
</Property>

<Property name="IDCard">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
<Parameter name="XMLNAME" value="IDCard"/>
</Property>

<Property name="PatNo">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
<Parameter name="XMLNAME" value="PatNo"/>
</Property>

<Property name="Name">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
<Parameter name="XMLNAME" value="Name"/>
</Property>

<Property name="Gender">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
<Parameter name="VALUELIST" value=",Male,Female"/>
<Parameter name="XMLNAME" value="Gender"/>
</Property>

<Property name="DOB">
<Type>%Date</Type>
<Parameter name="XMLNAME" value="DOB"/>
</Property>

<Property name="Citizenship">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
<Parameter name="XMLNAME" value="Citizenship"/>
</Property>

<Property name="PhoneNumber">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
<Parameter name="XMLNAME" value="PhoneNumber"/>
</Property>

<Storage name="Default">
<Type>%Library.CacheSerialState</Type>
<State>PatientRespState</State>
<StreamLocation>^Demo.EMRClient.PE0.PatientRespS</StreamLocation>
<Data name="PatientRespState">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>Id</Value>
</Value>
<Value name="2">
<Value>IDCard</Value>
</Value>
<Value name="3">
<Value>PatNo</Value>
</Value>
<Value name="4">
<Value>Name</Value>
</Value>
<Value name="5">
<Value>Gender</Value>
</Value>
<Value name="6">
<Value>DOB</Value>
</Value>
<Value name="7">
<Value>Citizenship</Value>
</Value>
<Value name="8">
<Value>PhoneNumber</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="Demo.LISClient.MSG.AddPatientReq">
<Super>Ens.Request</Super>
<TimeChanged>64647,63524.051757</TimeChanged>
<TimeCreated>64646,55016.048005</TimeCreated>

<Property name="PatientNumber">
<Type>%String</Type>
</Property>

<Property name="FullName">
<Type>%String</Type>
</Property>

<Property name="Gender">
<Type>%String</Type>
<Parameter name="VALUELIST" value=",M,F"/>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>AddPatientReqDefaultData</DefaultData>
<Data name="AddPatientReqDefaultData">
<Structure>listnode</Structure>
<Subscript>"AddPatientReq"</Subscript>
<Value name="1">
<Value>PatientNumber</Value>
</Value>
<Value name="2">
<Value>FullName</Value>
</Value>
<Value name="3">
<Value>Gender</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="Demo.LISClient.MSG.AddPatientResp">
<Super>Ens.Response</Super>
<TimeChanged>64646,66579.181666</TimeChanged>
<TimeCreated>64646,65852.968868</TimeCreated>

<Property name="Id">
<Type>%String</Type>
</Property>

<Property name="PatientNumber">
<Type>%String</Type>
</Property>

<Property name="FullName">
<Type>%String</Type>
</Property>

<Property name="Gender">
<Type>%String</Type>
<Parameter name="VALUELIST" value=",M,F"/>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>AddPatientRespDefaultData</DefaultData>
<Data name="AddPatientRespDefaultData">
<Structure>listnode</Structure>
<Subscript>"AddPatientResp"</Subscript>
<Value name="1">
<Value>Id</Value>
</Value>
<Value name="2">
<Value>PatientNumber</Value>
</Value>
<Value name="3">
<Value>FullName</Value>
</Value>
<Value name="4">
<Value>Gender</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="Demo.LISClient.Operation.PatientOperation">
<Super>EnsLib.REST.Operation</Super>
<TimeChanged>64646,68819.454716</TimeChanged>
<TimeCreated>64646,55177.098416</TimeCreated>

<Parameter name="INVOCATION">
<Default>Queue</Default>
</Parameter>

<Method name="AddPatient">
<FormalSpec>pRequest:Demo.LISClient.MSG.AddPatientReq,*pResponse:Demo.LISClient.MSG.AddPatientResp</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	try {
      // Prepare and log the call
      Set tURL=..Adapter.URL
      #Dim reqObj As %DynamicObject = {}
      set reqObj.PatientNumber = pRequest.PatientNumber
      set reqObj.FullName = pRequest.FullName
      set reqObj.Gender = pRequest.Gender
      // Execute the call
      Set tSC= ..Adapter.PostURL(tURL,.tHttpResponse, , reqObj.%ToJSON())
      // Return the response
      If $$$ISERR(tSC)&&$IsObject(tHttpResponse)&&$IsObject(tHttpResponse.Data)&&tHttpResponse.Data.Size {
         Set tSC=$$$ERROR($$$EnsErrGeneral,$$$StatusDisplayString(tSC)_":"_tHttpResponse.Data.Read())
      }
      Quit:$$$ISERR(tSC)
      If $IsObject(tHttpResponse) {
         // Instantiate the response object
         set pResponse = ##class(Demo.LISClient.MSG.AddPatientResp).%New()
         // Convert JSON into a Proxy Cache Object
         set tProxy = {}
         set tSC = ..JSONStreamToObject(tHttpResponse.Data, .tProxy)
         if (tSC){                                 
            // Set response properties from the Proxy Object
            set pResponse.Id = tProxy.Id
            set pResponse.PatientNumber = tProxy.PatientNumber
            set pResponse.FullName = tProxy.FullName
            set pResponse.Gender = tProxy.Gender
          }
       }
   }catch{
       Set tSC=$$$SystemError
   }
   Quit tSC
]]></Implementation>
</Method>

<XData name="MessageMap">
<Data><![CDATA[
<MapItems>
	<MapItem MessageType="Demo.LISClient.MSG.AddPatientReq"> 
		<Method>AddPatient</Method>
	</MapItem>
</MapItems>
]]></Data>
</XData>
</Class>


</Export>
